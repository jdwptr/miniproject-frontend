[{"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\index.js":"1","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\App.js":"2","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\components\\navbar.js":"3","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\assets\\index.js":"4","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\home.js":"5","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\login.js":"6","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\register.js":"7","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\action\\index.js":"8","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\action\\userAction.js":"9","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\reducer\\index.js":"10","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\reducer\\userReducer.js":"11","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\components\\carousel.js":"12","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\components\\products.js":"13","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\detailbeli.js":"14","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\cartpage.js":"15","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\history.js":"16","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\reducer\\historyReducer.js":"17","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\action\\historyAction.js":"18","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\historyAdmin.js":"19","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\error.js":"20"},{"size":870,"mtime":1606981669240,"results":"21","hashOfConfig":"22"},{"size":2500,"mtime":1607934013538,"results":"23","hashOfConfig":"22"},{"size":3044,"mtime":1607934721833,"results":"24","hashOfConfig":"22"},{"size":114,"mtime":1607415327252,"results":"25","hashOfConfig":"22"},{"size":714,"mtime":1607311937278,"results":"26","hashOfConfig":"22"},{"size":6401,"mtime":1607306551992,"results":"27","hashOfConfig":"22"},{"size":11107,"mtime":1607398444376,"results":"28","hashOfConfig":"22"},{"size":61,"mtime":1607915221038,"results":"29","hashOfConfig":"22"},{"size":186,"mtime":1606978477128,"results":"30","hashOfConfig":"22"},{"size":353,"mtime":1607914613424,"results":"31","hashOfConfig":"22"},{"size":771,"mtime":1607402242306,"results":"32","hashOfConfig":"22"},{"size":1501,"mtime":1607310195931,"results":"33","hashOfConfig":"22"},{"size":2832,"mtime":1607415500254,"results":"34","hashOfConfig":"22"},{"size":9348,"mtime":1607652328965,"results":"35","hashOfConfig":"22"},{"size":18656,"mtime":1607937428578,"results":"36","hashOfConfig":"22"},{"size":4609,"mtime":1607932783060,"results":"37","hashOfConfig":"22"},{"size":473,"mtime":1607914383712,"results":"38","hashOfConfig":"22"},{"size":301,"mtime":1607915176226,"results":"39","hashOfConfig":"22"},{"size":3713,"mtime":1607934586939,"results":"40","hashOfConfig":"22"},{"size":546,"mtime":1607934057100,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1seqcap",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\index.js",[],["87","88"],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\App.js",[],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\components\\navbar.js",[],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\assets\\index.js",[],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\home.js",["89"],"import React from 'react'\r\n\r\n// import comonents\r\nimport Carousel1 from '../components/carousel'\r\nimport Products from '../components/products'\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Carousel1/>\r\n                <Products/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        height: '100vh',\r\n    },\r\n    center: {\r\n        marginTop: '100px',\r\n        padding: '20px 30px',\r\n        width: '350px',\r\n        // height: '60vh',\r\n        borderRadius: '10px',\r\n        // backgroundColor: 'RGBA(176,176,176,0.4)'\r\n    }\r\n}\r\n\r\nexport default Home","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\login.js",[],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\register.js",[],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\action\\index.js",[],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\action\\userAction.js",[],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\reducer\\index.js",[],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\reducer\\userReducer.js",[],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\components\\carousel.js",[],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\components\\products.js",[],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\detailbeli.js",[],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\cartpage.js",["90","91"],"import React from 'react'\r\nimport Axios from 'axios'\r\nimport { login } from \"../action\"\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport {\r\n    Table,\r\n    Image,\r\n    Button,\r\n    Form,\r\n    Modal\r\n} from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nclass cartPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            image: '',\r\n            selectedSize: null,\r\n            size: null,\r\n            stok: '',\r\n            selectIndex: null,\r\n            newQty: 0,\r\n            total: 0,\r\n            reqPay: false,\r\n            reqPass: false,\r\n            passErr: false,\r\n            payErr: false,\r\n            emptyCart: false,\r\n            toHistory: false,\r\n            prodCart: [],\r\n            prodCartStock: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // NOTE\r\n        // supaya tiap di klik buy per item, pindah ke detail yg per item\r\n        // dlm console.log liat yg props, trs location, terus di search: ?id=5\r\n        // console.log(this)\r\n        // taruh console.log(this) nya di render\r\n        let nameItemCart= []\r\n        this.props.cart.map ((item, index) => {\r\n           nameItemCart.push(item.name)\r\n        })\r\n        console.log(nameItemCart)\r\n\r\n        let prodCart= []\r\n\r\n        nameItemCart.map ((item, index) => {\r\n            Axios.get (`http://localhost:2000/products?name=${item}`)\r\n                .then ((res) => {\r\n                    prodCart.push(res.data[0])\r\n                })\r\n                .catch ((err) => console.log(err))\r\n        })\r\n        console.log(prodCart)\r\n\r\n        this.setState({prodCart: prodCart})\r\n       \r\n        // Axios.get(`http://localhost:2000/products${this.props.location.search}`)\r\n        //     .then((res) => {\r\n        //         // res.data nya array karena ngambil pake query\r\n        //         // console.log(res.data[0].images[1])\r\n        //         this.setState({ dataProd: res.data[0], image: res.data[0].images[1]})\r\n        //         // this.setState({ stok: res.data[0].stock[0]})\r\n        //         // console.log(res.data[0].stock[0])\r\n        //     })\r\n        //     .catch((err) => console.log(err))\r\n    }\r\n\r\n    btnDelete = (index) => {\r\n        // console.log(index)\r\n        let tempCart = this.props.cart\r\n        tempCart.splice(index, 1)\r\n        console.log(tempCart)\r\n\r\n        Axios.patch(`http://localhost:2000/users/${this.props.id}`, { cart: tempCart })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                Axios.get(`http://localhost:2000/users/${this.props.id}`)\r\n                    .then((res) => this.props.login(res.data))\r\n                    .catch((err) => console.log(err))\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    btnDone = (index) => {\r\n        // NOTE : mengganti data pesanan suatu produk berdasarkan index\r\n        // console.log(index)\r\n\r\n        // ambil dr cart\r\n        // mengganti data cart untuk produk yg ingin diganti\r\n        let tempProd = this.props.cart[index]\r\n        console.log('1', tempProd)\r\n\r\n        tempProd.qty = this.state.newQty\r\n        tempProd.total = this.state.newQty * this.props.cart[index].price\r\n\r\n        // NOTE : memasukkan object pesanan produk yg baru kedalam array cart\r\n        // tempCart adalah tempat penampungan sementara data cart user yang lama\r\n        // tempProd adalah tempat penyimpanan sementara data produk yg ingin diedit\r\n        let tempCart = this.props.cart\r\n\r\n        tempCart.splice(index, 1, tempProd)\r\n        console.log('2', tempCart)\r\n\r\n        // NOTE ; mengirim perubahan ke database json\r\n        Axios.patch(`http://localhost:2000/users/${this.props.id}`, { cart: tempCart })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n\r\n                // update data di redux\r\n                Axios.get(`http://localhost:2000/users/${this.props.id}`)\r\n                    .then((res) => {\r\n                        this.props.login(res.data)\r\n                        this.setState({ selectIndex: null })\r\n                    })\r\n                    .catch((err) => console.log(err))\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    btnPlus = () => {\r\n        this.setState({ newQty: this.state.newQty + 1 })\r\n    }\r\n\r\n    btnMinus = () => {\r\n        if (this.state.newQty <= 0) return\r\n\r\n        this.setState({ newQty: this.state.newQty - 1 })\r\n    }\r\n\r\n    changeQty = (e) => {\r\n        this.setState({ newQty: e.target.value })\r\n    }\r\n\r\n    renderThead = () => {\r\n        return (\r\n            <thead style={styles.thead}>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Image</th>\r\n                    <th>Shoes Name</th>\r\n                    <th>Colour</th>\r\n                    <th>Size</th>\r\n                    <th>Price</th>\r\n                    <th>Quantity</th>\r\n                    <th>Total</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n        )\r\n    }\r\n\r\n    renderTbody = () => {\r\n        const { prodCart, selectedSize, stok } = this.state\r\n        return (\r\n            <tbody style={styles.tbody}>\r\n                {this.props.cart.map((item, index) => {\r\n                    // if else buat tampilan kalo di edit\r\n                    if (this.state.selectIndex === index) {\r\n                        return (\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td><Image src={item.image} style={styles.image}></Image></td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.colour}</td>\r\n                                <td>\r\n                                    {/* {item.size} */}\r\n                                    <div>\r\n                                        {/* dibikin ternary krn pertama kali jalan dataProd masih kosong */}\r\n                                        {/* button size kalo di klik nampilin stok dibawah */}\r\n                                        {(prodCart.map || [])((item, index) => {\r\n                                            return (\r\n                                                <Button\r\n                                                    key={index}\r\n                                                    variant='dark'\r\n                                                    onClick={() => this.setState({ size: item.stock.code, selectedSize: index, stok: item.stock.total })}\r\n                                                    style={{\r\n                                                        backgroundColor: selectedSize === index ? '#ffffff' : '#242423',\r\n                                                        color: selectedSize === index ? '#000000' : '#ffffff'\r\n                                                    }}\r\n                                                >\r\n                                                    {item.stock.code}\r\n                                                </Button>\r\n                                            )\r\n                                        })}\r\n                                        <p style={{fontSize: '15px'}}>*Available Stock : {stok ? stok : '-'} Pair</p>\r\n                                    </div>\r\n                                </td>\r\n                                <td>IDR {item.price.toLocaleString()}</td>\r\n                                <td style={{ display: 'flex' }}>\r\n                                    {/*  <Button onClick={() => this.setState({newQty: this.state.newQty - 1})}>*/}\r\n                                    {/* <Button onClick={() => this.btnMinus}> */}\r\n                                    <Button\r\n                                        onClick={this.btnMinus}>\r\n                                        <i className=\"far fa-minus-square\"></i>\r\n                                    </Button>\r\n                                    <Form.Control min={0} value={this.state.newQty} style={{ width: '50px' }} onChange={(e) => this.changeQty(e)} />\r\n                                    <Button\r\n                                        onClick={() => this.setState({ newQty: parseInt(this.state.newQty) + 1 })}>\r\n                                        <i className=\"far fa-plus-square\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                                <td>IDR {(this.state.newQty * item.price).toLocaleString()}</td>\r\n                                <td>\r\n                                    <Button style={styles.btn} onClick={() => this.btnDone(index)}>DONE</Button>\r\n                                    <Button style={styles.btn1} onClick={() => this.setState({ selectIndex: null })}>CANCEL</Button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                    return (\r\n                        <tr>\r\n                            <td>{index + 1}</td>\r\n                            <td><Image src={item.image} style={styles.image}></Image></td>\r\n                            <td>{item.name}</td>\r\n                            <td>{item.colour}</td>\r\n                            <td>{item.size}</td>\r\n                            <td>IDR {item.price.toLocaleString()}</td>\r\n                            <td>{item.qty}</td>\r\n                            <td>IDR {item.totalPrice.toLocaleString()}</td>\r\n                            <td>\r\n                                <Button\r\n                                    // disabled={total >= newQty ? true : false}\r\n                                    style={styles.btn}\r\n                                    onClick={() => this.setState({ selectIndex: index, newQty: item.qty })}>\r\n                                    EDIT\r\n                                </Button>\r\n                                <Button\r\n                                    // disabled={total <= 0 ? true : false}\r\n                                    style={styles.btn1}\r\n                                    onClick={() => this.btnDelete(index)}>\r\n                                    DELETE\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        )\r\n    }\r\n\r\n    btnCheckout = () => {\r\n        // buat properti req payment\r\n        if (this.props.cart.length === 0) return this.setState({ emptyCart: true })\r\n\r\n        this.setState({reqPass: true})\r\n    }\r\n\r\n    totalHarga = () => {\r\n        let counter = 0\r\n        this.props.cart.map(item => counter += item.totalPrice)\r\n        // console.log('1', counter)\r\n        // this.setState({total: counter})\r\n        return counter\r\n    }\r\n\r\n    confirmPay = () => {\r\n        // tampung inputan dari user\r\n        let uang= this.refs.payment.value\r\n        console.log(uang)\r\n\r\n        let total= this.totalHarga()\r\n\r\n        if (uang <= total) return this.setState({payErr: true})\r\n\r\n        if (this.props.cart.length === 0) return this.setState({emptyCart: true})\r\n        // spy modalnya ketutup\r\n        \r\n        // siapkan data buat masukin ke history\r\n        let history= {\r\n            username: this.props.username,\r\n            date: new Date().toLocaleString(),\r\n            total: total,\r\n            product: this.props.cart,\r\n        }\r\n        console.log(history)\r\n\r\n        // NOTE CALLBACK HELL\r\n        // tembak history disini\r\n        Axios.post(`http://localhost:2000/history`, history)\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            \r\n            // kosongkan cart setelah ini dan update database\r\n            Axios.patch (`http://localhost:2000/users/${this.props.id}`, {cart: []})\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                \r\n                // NOTE UPDATE REDUX\r\n                Axios.get (`http://localhost:2000/users/${this.props.id}`)\r\n                .then((res) => {\r\n                    console.log(res.data)\r\n                    this.props.login(res.data)\r\n                    this.setState({reqPay: false, toHistory: true})\r\n                })\r\n                .catch((err) => console.log(err))\r\n            })\r\n            .catch((err) => console.log(err))\r\n        })\r\n        .catch((err) => console.log(err))\r\n\r\n    }\r\n\r\n    confirmPass = () => {\r\n        let pass= this.refs.pass.value\r\n        console.log(pass)\r\n\r\n        // this.setState({reqPass: false})\r\n\r\n        if (pass !== this.props.password) return this.setState({passErr: true})\r\n        \r\n        this.setState({reqPay: true, reqPass: false})\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.size, this.state.stok, this.props.location.search)\r\n        const {reqPay, reqPass, passErr, payErr, emptyCart, toHistory} = this.state\r\n        // console.log(this.state.selectIndex)\r\n\r\n        // REVIEW REDIRECT KE LOGIN KALO USER BELOM LOGIN\r\n        if (!this.props.id) return <Redirect to=\"/login\" />\r\n\r\n        // REVIEW REDIRECT KE HISTORY KALO USER BERHASIL CHECKOUT\r\n        if (toHistory) return <Redirect to=\"/history\"/>\r\n\r\n        return (\r\n            <div style={styles.container}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <h1>CART</h1>\r\n                    <Button\r\n                        onClick={this.btnCheckout}\r\n                        style={styles.btn1}>\r\n                        Check Out\r\n                    </Button>\r\n                </div>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    {this.renderThead()}\r\n                    {this.renderTbody()}\r\n                </Table>\r\n\r\n                <h1 style={{textAlign:'right'}}>TOTAL: IDR {this.totalHarga().toLocaleString()}</h1>\r\n\r\n                <Modal show={reqPass} onHide={() => this.setState({reqPass: false})}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>PASSWORD CONFIRMATION</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        Please enter your password here 🔻\r\n                        <Form.Control ref='pass' type='password' placeholder=\"Enter Password Here\"/>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\"\r\n                            onClick={() => this.setState({reqPass: false})}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\"\r\n                            onClick={this.confirmPass}>\r\n                            Confirm\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n\r\n                <Modal show={passErr} onHide={() => this.setState({passErr: false})}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>ERROR WARNING</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        WRONG PASSWORD, ENTER AGAIN !\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\"\r\n                            onClick={() => this.setState({passErr: false})}>\r\n                                Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal show={payErr} onHide={() => this.setState({payErr: false})}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>PAYMENT WARNING</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        PLEASE INPUT THE RIGHT AMOUNT FOR PAYMENT\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\"\r\n                            onClick={() => this.setState({payErr: false})}>\r\n                                Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal show={reqPay} onHide={() => this.setState({reqPay: false})}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>PAYMENT</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        Please input your payment amount here 🔻\r\n                        <Form.Control ref='payment' type='number' placeholder=\"Enter Amount of Payment Here\"/>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\"\r\n                            onClick={() => this.setState({reqPay: false})}>\r\n                                Close\r\n                        </Button>\r\n                        <Button variant=\"primary\"\r\n                            onClick={this.confirmPay}>\r\n                                Confirm\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal show={emptyCart} onHide={() => this.setState({emptyCart: false})}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>EMPTY CART</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        🛒Make Sure The Items are in Your Cart 🛒\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\"\r\n                            onClick={() => this.setState({emptyCart: false})}>\r\n                                Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    container: {\r\n        marginTop: '70px',\r\n        padding: '0 10px',\r\n    },\r\n    image: {\r\n        width: '100px',\r\n        height: '100px'\r\n    },\r\n    btn: {\r\n        fontSize: '10px',\r\n        textAlign: 'center',\r\n        marginRight: '10px'\r\n    },\r\n    btn1: {\r\n        fontSize: '10px',\r\n        textAlign: 'center'\r\n    },\r\n    tbody: {\r\n        fontSize: '10px',\r\n        textAlign: 'center'\r\n    },\r\n    thead: {\r\n        fontSize: '15px',\r\n        textAlign: 'center'\r\n    },\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.user.cart,\r\n        id: state.user.id,\r\n        username: state.user.username,\r\n        password: state.user.password\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(cartPage)","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\history.js",[],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\reducer\\historyReducer.js",[],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\action\\historyAction.js",[],["92","93"],"C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\historyAdmin.js",["94"],"import React from 'react'\r\nimport Axios from 'axios'\r\nimport { connect } from 'react-router-dom'\r\n\r\nimport {\r\n    Table,\r\n    Accordion,\r\n    Image,\r\n    Card\r\n} from 'react-bootstrap'\r\n\r\nclass HistoryAdmin extends React.Component {\r\n    constructor (props) {\r\n        super (props)\r\n        this.state= {\r\n            data: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        Axios.get(`http://localhost:2000/history`)\r\n            .then((res) => {\r\n                // NOTE\r\n                console.log(res.data)\r\n\r\n                // pake res.data aja krn mau ngirim seluruh isi array history, gaperlu pake index\r\n                this.setState({data: res.data})\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    renderAccordion = () => {\r\n        return (\r\n            <Accordion>\r\n                {this.state.data.map((item, index) => {\r\n                    return (\r\n                        <Card>\r\n                            <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={index + 1}>\r\n                                DATE: {item.date}, TOTAL PURCHASE: {item.total.toLocaleString()}\r\n                            </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey={index + 1}>\r\n                                <Table striped bordered hover variant='dark'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <td>#</td>\r\n                                            <td>Name</td>\r\n                                            <td>Image</td>\r\n                                            <td>Price</td>\r\n                                            <td>Size</td>\r\n                                            <td>Quantity</td>\r\n                                            <td>Total</td>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {item.product.map((item2, index2) => {\r\n                                            return (\r\n                                            <tr>\r\n                                                <td>{index2 + 1}</td>\r\n                                                <td>{item2.name}</td>\r\n                                                <td>\r\n                                                    <Image style={styles.image} src={item2.image}/>\r\n                                                </td>\r\n                                                <td>IDR {item2.price.toLocaleString()}</td>\r\n                                                <td>{item2.size}</td>\r\n                                                <td>{item2.qty}</td>\r\n                                                <td>IDR {item2.totalPrice.toLocaleString()}</td>\r\n                                            </tr>\r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                            )\r\n                })}\r\n            </Accordion>\r\n                )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={styles.container}>\r\n                <h1>ADMIN TRANSACTION HISTORY</h1>\r\n                {this.renderAccordion()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    container: {\r\n        marginTop: '70px',\r\n        padding: '0px 20px',\r\n        align: 'center'\r\n    },\r\n    image: {\r\n        width: '100px',\r\n        height: '100px'\r\n    }\r\n}\r\n\r\nexport default HistoryAdmin","C:\\JANE\\PURWADHIKA\\FRONTEND\\mini-project-jane\\mini-project-jane\\src\\pages\\error.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":18,"column":7,"nodeType":"101","messageId":"102","endLine":18,"endColumn":13},{"ruleId":"103","severity":1,"message":"104","line":45,"column":44,"nodeType":"105","messageId":"106","endLine":45,"endColumn":46},{"ruleId":"103","severity":1,"message":"104","line":52,"column":41,"nodeType":"105","messageId":"106","endLine":52,"endColumn":43},{"ruleId":"95","replacedBy":"107"},{"ruleId":"97","replacedBy":"108"},{"ruleId":"99","severity":1,"message":"109","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":17},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'styles' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["110"],["111"],"'connect' is defined but never used.","no-global-assign","no-unsafe-negation"]